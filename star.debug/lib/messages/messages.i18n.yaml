
general:
  lang: 'English'
  app_name: 'Star Debug'
  close: Close
  cancel: Cancel
  next: Next
  back: Back
  save: Save
  no_changes: No changes
  try_again: Try again
  loading: Loading ...
  loading_error: Loading error occurred
  error_occured: Error occurred
  refresh: Refresh
  copied_to_clipboard: Copied to clipboard
  confirm: Confirm
  reject: Reject
  no_items: No items
  got_it: Got it
  ok: OK
  select_lang: Select language
  change_language: Change language
  dish: Dish
  router: Router
  device_app: Device App
  open_json_file: Open JSON file
  open_clipboard: Open JSON from clipboard
  debug_data_viewer: Debug Data Viewer
  no_data_found: No data found
  dark_mode: Dark mode
  online: Online
  version: Version
  charts: Charts
  save_debug_data: Save Debug Data
  to_clipboard: To Clipboard
  to_file: To File
  share: Share
  view_in_app: View in app
  reboot: Reboot
  stow: Stow
  unstow: Unstow
  inhibit_gps: Inhibit GPS
  uninhibit_gps: Uninhibit GPS

about:
  about: About
  about_starlink_for_ukraine: About Starlink For Ukraine
  starlink_for_ukraine: Starlink For Ukraine
  starlink_for_ukraine_in_fb: Starlink For Ukraine in Facebook
  about_text: |
    The application was created as a part of the volunteer initiative "**Starlink For Ukraine**"
     for the needs of people who work every day to ensure that communications are available even in places
     which russia is trying to turn into a desert.
  project_on_github: Project on GitHub

wifi:
  setup: Setup
  setup_wifi: Setup Wifi
  network_name: Network name
  password: Network password
  skip: Skip
  apply: Apply

live:
  starlink_live: "Starlink Live"

header:
  general: General
  signal: Signal
  network: Network
  alerts: Alerts
  device_info: Device Info
  config: Config
  gps_stats: GPS Stats
  antenna: Antenna
  ready_states: Ready States
  networks: Networks
  boot: Boot
  client: Client

online:
  internet: Internet
  starlink_internet: Starlink Internet

grpc:
  DeviceInfo:
    id: Id
    hardware_version: Hardware revision
    software_version: Software version
    country_code: Country code
    utc_offset_s: UTC offset, s
    software_partitions_equal: Software partitions equal
    is_dev: Development hardware
    bootcount: Boot count
    anti_rollback_version: Anti-Rollback version
    is_hitl: is_hitl
    manufactured_version: Software version (manufactured)
    generation_number: Generation number
    dish_cohoused: Starlink cohoused

    x_build_date: Build date
    x_timezone: Timezone

  BootInfo:
#    count_by_reason: Count by reason
    last_reason: Last reason
#    last_count: Last count
#    count_by_reason_delta: Count by reason delta

#  DishAlerts:
#    motors_stuck: motors_stuck
#    thermal_shutdown: thermal_shutdown
#    thermal_throttle: thermal_throttle
#    unexpected_location: unexpected_location
#    mast_not_near_vertical: mast_not_near_vertical
#    slow_ethernet_speeds: slow_ethernet_speeds
#    roaming: roaming
#    install_pending: install_pending
#    is_heating: is_heating
#    power_supply_thermal_throttle: power_supply_thermal_throttle
#    is_power_save_idle: is_power_save_idle
#    moving_while_not_mobile: moving_while_not_mobile
#    moving_fast_while_not_aviation: moving_fast_while_not_aviation

  DishOutage:
    cause: Cause
    cause__hint: |
      The reason why the dish is offline. The possible options are:
      
      - UNKNOWN
      - BOOTING - The booting is in progress
      - STOWED - The dish is stowed to be packaged for storage
      - THERMAL_SHUTDOWN - Dish is overheated
      - NO_SCHEDULE
      - NO_SATS - No enough GPS signal received
      - OBSTRUCTED - Too much signal obstructions
      - NO_DOWNLINK - No downlink from satellites is established 
      - NO_PINGS
      - ACTUATOR_ACTIVITY
      - CABLE_TEST
      - SLEEPING
      - MOVING_WHILE_NOT_ALLOWED
    start_timestamp_ns: Start timestamp, ns
    duration_ns: Duration, ns
    did_switch: Did switch

  DishGpsStats:
    gps_valid: GPS valid
    gps_sats: GPS satellites
    no_sats_after_ttff: No GPS satellites after first fix
    inhibit_gps: Don't trust Dishy's GPS

  DishReadyStates:
    cady: Clock generator
    scp: RFFE bus interface
    l1l2: Modem L1L2
    xphy: Xilinx XPHY interface
    aap: Digital beamformers
    rf: RF front end

  DishConfig:
    snow_melt_mode: snow_melt_mode
    location_request_mode: location_request_mode
    level_dish_mode: level_dish_mode
    power_save_start_minutes: power_save_start_minutes
    power_save_duration_minutes: power_save_duration_minutes
    power_save_mode: power_save_mode

  DishObstructionStats:
    fraction_obstructed: Fraction obstructed
    valid_s: Time valid
    currently_obstructed: Currently obstructed
    avg_prolonged_obstruction_duration_s: "Average prolonged obstruction duration"
    avg_prolonged_obstruction_interval_s: "Average prolonged obstruction interval"
    avg_prolonged_obstruction_valid: Average prolonged obstruction valid
    time_obstructed: Time obstructed
    patches_valid: Patches valid

  DishGetStatus:
    uptime_s: Uptime
    uptime_s__hint: >
      Time the dish is running since the last reboot.
    seconds_to_first_nonempty_slot: Seconds to first non-empty slot
    pop_ping_drop_rate: PoP ping drop rate
    fraction_obstructed: fraction_obstructed
    valid_s: valid_s
    currently_obstructed: currently_obstructed
    avg_prolonged_obstruction_duration_s: avg_prolonged_obstruction_duration_s
    avg_prolonged_obstruction_interval_s: avg_prolonged_obstruction_interval_s
    avg_prolonged_obstruction_valid: avg_prolonged_obstruction_valid
    time_obstructed: time_obstructed
    patches_valid: patches_valid

    downlink_throughput_bps: Downlink Throughput
    uplink_throughput_bps: Uplink Throughput
    pop_ping_latency_ms: PoP ping latency, ms
    stow_requested: Stow requested
    boresight_azimuth_deg: Panel boresight Azimuth angle, deg
    boresight_elevation_deg: Panel boresight Elevation agngle, deg

    eth_speed_mbps: Ethernet speed
    mobility_class: Mobility class
    is_snr_above_noise_floor: SNR above noise floor

    class_of_service: Class of service
    software_update_state: Software update state
    is_snr_persistently_low: SNR persistently low
    has_actuators: Actuators
    disablement_code: Service state

  ClientName:
    mac_address: mac_address
    given_name: given_name
  Network:
    ipv4: ipv4
    client_isolation: client_isolation
    guest: guest
    landing: landing
    domain: domain
    dhcpv4_start: dhcpv4_start
  BasicServiceSet:
    bssid: bssid
    ssid: ssid
    band: band
    disable: disable
    hidden: hidden
    iface_name: iface_name
    auth: auth

  WifiConfig:
    country_code: Country code
    setup_complete: Setup complete
    version: Version
    channel_2ghz: channel_2ghz
    channel_5ghz: channel_5ghz
#  repeated .SpaceX.API.Device.PublicKey dynamic_keys = 22;
    is_repeater: is_repeater
    boot_count: Boot count
    string: string
    bypass_mode: bypass_mode
#  map<string, .SpaceX.API.Device.MeshConfig> mesh_configs = 33;
    apply_dynamic_keys: apply_dynamic_keys
    dfs_enabled: dfs_enabled
    incarnation: incarnation
    wireless_mode_2ghz: wireless_mode_2ghz
    wireless_mode_5ghz: wireless_mode_5ghz
    ht_bandwidth_2ghz: ht_bandwidth_2ghz
    ht_bandwidth_5ghz: ht_bandwidth_5ghz
    vht_bandwidth: vht_bandwidth
    is_aviation: is_aviation
    secure_dns: secure_dns
    ap_mode: ap_mode
    disable_mesh_onboarding: disable_mesh_onboarding
    pin_country_code: pin_country_code
    custom_power_table: custom_power_table
    use_public_services: use_public_services
    disable_automated_speedtests: disable_automated_speedtests
    channel_5ghz_high: channel_5ghz_high
    wireless_mode_5ghz_high: wireless_mode_5ghz_high
    ht_bandwidth_5ghz_high: ht_bandwidth_5ghz_high
    vht_bandwidth_5ghz_high: vht_bandwidth_5ghz_high
    enable_umbilical_vlan: enable_umbilical_vlan
    outdoor_mode: outdoor_mode
    disable_2ghz: disable_2ghz
    disable_5ghz: disable_5ghz
    disable_5ghz_high: disable_5ghz_high
    disable_x_mesh_backhaul: disable_x_mesh_backhaul
    tx_power_level_2ghz: tx_power_level_2ghz
    tx_power_level_5ghz: tx_power_level_5ghz
    tx_power_level_5ghz_high: tx_power_level_5ghz_high
#  map<string, .SpaceX.API.Device.MeshConfig> mesh_configs_updates = 3033;

  PingMetrics:
    in_unhappy_hour_2s: in_unhappy_hour_2s
    in_unhappy_hour_5s: in_unhappy_hour_5s
    drop_rate_5m: drop_rate_5m
    latency_5m: latency_5m

  RxTxStats:
    #RX
    bytes: bytes
    count_errors: count_errors
    nss: nss
    mcs: mcs
    bandwidth: bandwidth
    guard_ns: guard_ns
    rate_mbps: rate_mbps
    airtime_fraction_last_1s: airtime_fraction_last_1s
    sampled_packets: sampled_packets
    sampled_packets_retried: sampled_packets_retried
    sampled_packets_dropped: sampled_packets_dropped
    phy_mode: phy_mode

    #TX
    success_bytes: success_bytes

  WifiClient:
    name: name
    mac_address: MAC address
    ip_address: IP address
    signal_strength: Signal strength
    rx_stats: rx_stats
    tx_stats: tx_stats
    associated_time_s: Associated time, s
    mode_str: mode_str
    iface: Interface
    snr: Signal to noice
    psmode: psmode
    channel_width: channel_width
    upstream_mac_address: upstream_mac_address
    role: Role
    device_id: device_id
    swq_checks: swq_checks
    swq_checks_non_empty: swq_checks_non_empty
    mib_steer_state: mib_steer_state
    mib_steer_method: mib_steer_method
    btm_requests: btm_requests
    btm_requests_success: btm_requests_success
    domain: domain
    dot11v_support: dot11v_support
    iface_name: iface_name
    steer_req_success_last_1h: steer_req_success_last_1h
    steer_req_fail_last_1h: steer_req_fail_last_1h
    steer_req_fail_and_dissoc_last_1h: steer_req_fail_and_dissoc_last_1h
    steer_state: steer_state
    given_name: given_name
    hops_from_controller: hops_from_controller
    est_tx_rate_mbps_from_controller: est_tx_rate_mbps_from_controller
    est_rx_rate_mbps_from_controller: est_rx_rate_mbps_from_controller
    hardware_version: hardware_version
    software_version: software_version
    api_version: api_version
    ping_metrics: ping_metrics
    ipv6_addresses: IPv6 addresses

    x_rx_bytes: Received
    x_tx_bytes: Transmitted


#  WifiAlerts:
#    thermal_throttle: thermal_throttle
#    install_pending: install_pending
#    freshly_fused: freshly_fused
#    lan_eth_slow_link_10: lan_eth_slow_link_10
#    lan_eth_slow_link_100: lan_eth_slow_link_100
#    wan_eth_poor_connection: wan_eth_poor_connection
#    mesh_topology_changing_often: mesh_topology_changing_often
#    mesh_unreliable_backhaul: mesh_unreliable_backhaul

  WifiGetStatus:
    captive_portal_enabled: Captive portal enabled
  #  .SpaceX.API.Device.DeviceInfo device_info = 3;
    uptime_s: Uptime
    ipv4_wan_address: WAN IPv4
    ping_drop_rate: Ping drop rate
    ping_latency_ms: Ping latency, ms
    is_aviation: Aviation
    dish_ping_drop_rate: Dish ping drop rate
    dish_ping_latency_ms: Dish ping latency, ms
    pop_ping_drop_rate: PoP ping drop rate
    pop_ping_latency_ms: PoP ping latency, ms
    is_aviation_conformed: Aviation conformed
    ipv6_wan_addresses: WAN IPv6
    dish_ping_drop_rate_5m: Dish ping drop rate, 5m
#    repeated .SpaceX.API.Device.DhcpServer dhcp_servers = 1019;
#    .SpaceX.API.Device.WifiConfig config = 2000;
#    repeated .SpaceX.API.Device.WifiClient clients = 3000;
    has_client_index: has_client_index
    client_index: client_index
